<resources>
    <string name="app_name">Custom Pairer</string>
    <string name="title_activity_pair">Pair new device</string>
    <string name="connecting_to_ap">Connecting to AP...</string>
    <string name="fetching_device_info">Fetching device info...</string>
    <string name="scanning_wifi">Scanning WiFi...</string>
    <string name="scan_fragment_text">Please be patient while the app connects to the Meross Device. This operation requires WiFi and location services enabled in order to succeed.</string>
    <string name="type">Type:</string>
    <string name="firmware_ver">Firmware ver:</string>
    <string name="inner_ip">Inner IP:</string>
    <string name="wifi_ap">Wifi AP:</string>
    <string name="mqtt_server">MQTT Server:</string>
    <string name="user_id">User Id:</string>
    <string name="version">Version:</string>
    <string name="chip">Chip:</string>
    <string name="mac">MAC:</string>
    <string name="uuid">UUID:</string>
    <string name="na">N/A</string>
    <string name="discovered_device_title">Discovered Device</string>
    <string name="colon">:</string>
    <string name="configure_btn">Configure this device</string>
    <string name="device_icon_description">Device Icon</string>
    <string name="fragment_info_text">"The discovery processs has queried the device and obtained the following information. "</string>
    <string name="pair_btn">Pair!</string>
    <string name="pair_fragment_text">"Please be patient while the app connects to the Meross Device. "</string>
    <string name="paring_done_title">PAIRING COMPLETED!</string>
    <string name="pairing_done_unverified">The device should now reboot itself and connect to the specific Wifi/MQTT broker. \n\nWhen the connection succeeds, the device LED will turn solid green. That means the device has paired successfully. If that does not happen, then you need to start over again and double check Wifi configuration, MQTT configuration and Credentials configuration.</string>
    <string name="pairing_done_verified">Congratulations! The pairing process completed successfully and the HTTP API reported the device online. You should be ready to go.</string>
    <string name="fargment_wifi_title">Wifi Connection</string>
    <string name="fargment_wifi_text">Please select the WiFi AP where the Meross device should connect to.</string>
    <string name="wifi_password">Wifi password</string>
    <string name="show_password">Show password</string>
    <string name="next">Set wifi and scan mqtt</string>
    <string name="next_no_validation">Set wifi without mqtt scan</string>
    <string name="ssid">SSID:</string>
    <string name="bssid">BSSID:</string>
    <string name="wifi_signal_strength">Wifi signal strength icon</string>
    <string name="signal">Signal:</string>
    <string name="channel">Channel:</string>

    <string name="title_activity_main">MainActivity</string>
    <string name="nav_header_title">Android Studio</string>
    <string name="nav_header_subtitle">android.studio@android.com</string>
    <string name="nav_header_desc">Navigation header</string>

    <string name="menu_account">Account &amp; Login</string>
    <string name="menu_pair">Pair</string>
    <string name="menu_devices">Devices</string>
    <string name="title_activity_login">API Login</string>
    <string name="title_manual_setup">Manual API Setup</string>
    <string name="login_intro_text">Log-in to the HTTP API broker.</string>
    <string name="login_intro_text_meross">Fill in your credentials as you would do in the Official Meross app to proceed.</string>
    <string name="login_intro_ha_broker">Make sure the Meross Local Broker (on HomeAssistant) Addon is started and log-in using the credentials configured in the configuration section of that Addon.</string>

    <string name="mqtt_config_fragment_text">Meross plugs are only capable to connect to MQTT over TLS connections (default port 8883). Using a clear-mqtt connection won\'t work.</string>
    <string name="mqtt_fragment_title">MQTT Server</string>
    <string name="mqtt_conf_name">Configuration Name...</string>
    <string name="mqtt_host_name">Server hostname or IP...</string>
    <string name="mqtt_port">Server Port</string>
    <string name="save_checkbox">Save for future use</string>
    <string name="mqtt_key_override_message">Override USER-ID/KEY parameters.</string>
    <string name="mqtt_custom_user_id">Custom User-Id</string>
    <string name="mqtt_custom_key">Custom key</string>
    <string name="account_activity_logged_info">Your account data is represented as follows.</string>

    <string name="title_device_list">Devices</string>
    <string name="fragment_support_title">Supporting this app</string>
    <string name="support_this_app_text_intro">First of all, if you reached this section of the app, it means you care about it, and <b>that\'s great!</b> </string>
    <string name="support_this_app_text">This app, as well as almost all the other tools that I developed, is free &amp; opensource. If you feel thankful and would like to support my work, you can do that via in a couple of ways.</string>
    <string name="support_this_app_links">Have a look at the following for more info:</string>
    <string name="support_this_app_buy_me_a_coffe_link"><a href="https://www.buymeacoffee.com/albertogeniola">BuyMeACoffe program</a></string>
    <string name="support_this_app_github_sponsorhip_link"><a href="https://github.com/sponsors/albertogeniola">GitHub Sponsorship program</a></string>


    <string name="manual_setup_info">Use this option to manually set the UserId and Key values manually. Such values are usually provided by the Meross HTTP API broker or by the HA Local Addon. However, you can manually set such values in case you want to pair against third-party brokers: you sure know what you are doing.</string>

    <!-- TODO: Remove or change this placeholder text -->
    <string name="menu_about">About...</string>
    <string name="about_text_title">What is Custom Pairer?</string>
    <string name="about_fragment_title">About this app</string>

</resources>
